Installation:
-------------

  Put this file in your ~/.vim/plugin dir.



Defining Snippets:
------------------

  Put all your snippets in ~/.vim/after/plugin/ or split them up for each
  filetype and put them in ~/.vim/ftplugin

  Use the function NERDSnippet(filetype, keyword, expansion [, name]) for filetype
  specific snippets.

  Use the function NERDSnippetGlobal(keyword, expansion [, name]) for global
  snippets (available for all filetypes)


Example Snippet: a for loop snippet for java
--------------------------------------------

  call NERDSnippet("java", "for", "for(<+int i=0+>; <+condition+>; <+i+++>){\<CR><++>\<CR>}")

  There are 4 markers:
      1. <+int i=0+>
      2. <+condition+>
      3. <+i+++>
      4. <++>

  1, 2 and 3 have default values. When you tab to them, they will be
  replaced with the text "int i=0", "condition" and "i++".

  4 is an empty marker, these markers are removed when the cursor arrives on
  them.



Example Snippet: validates_presence_of for rails
------------------------------------------------

  call NERDSnippet("ruby", "vpo", "validates_presence_of :<++><+, :message => '<++>', :on => <++>, :if => <++>+>")

  Notice how the second marker:
  "<+, :message => '<++>', :on => <++>, :if => <++>+>"
  has 3 markers nested inside it. When you tab to this marker you can either
  hit tab again to "tab into" it, or hit backspace/ctrl-h or enter to delete
  it and move on. This way you can create "optional" parts to a snippet.



Example Snippet: global modeline snippet
----------------------------------------

  function! ModelineSnippet()
      let start = substitute(&commentstring, '^\([^ ]*\)\s*%s\(.*\)$', '\1', '')
      let end = substitute(&commentstring, '^.*%s\(.*\)$', '\1', '')
      return start . " vim: set <+settings+>:" . end
  endfunction

  call NERDSnippetGlobal("modeline", "\<c-r>=ModelineSnippet()\<CR>")

  Here we have a snippet that uses some more complex logic, so we get a
  function to generate the snippet code for us.



Duplicate Keywords:
-------------------

  If multiple snippets exist for the same keyword then the script will
  ask you which one you want to insert.

  You can have up to 9 snippets bound to a single keyword.

  When binding multiple snippets to one keyword, you can assign the snippets
  a name to make it easier for the user to identify which snippet to use.



Example Snippet: two named snippets bound to a single keyword
-------------------------------------------------------------

  call NERDSnippet("html", "table", "<table>\<CR><++></table>", "simple table")
  call NERDSnippet("html", "table", "<table class=\"<++>\">\<CR><++></table>", "table with class")

  Notice that we pass the name in as the last argument.



More Example Snippets:
----------------------------------------

  For more examples, check out my snippets file here:
  http://github.com/scrooloose/vimfiles/tree/master/after/plugin/snippets.vim



Variables:
----------
  g:NERDSnippets_key                        default: <tab>
      expands snippets and jumps to markers
  g:NERDSnippets_marker_start               default: <+
      start of marker tags
  g:NERDSnippets_marker_end                 default: +>
      end of marker tags
